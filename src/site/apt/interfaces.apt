Rule Generator Interfaces

  The communication between the rule generator and the client application is performed through HTTP Requests and interfaces that respond to these requests.
  The general structure of the interfaces is:
  
---------------------------------
http://HOST:PORT/RETURN_FORMAT/INTERFACE
---------------------------------

  An interface may respond to at least one and up to four return formats (JSON, XML, OWL, DSL). The number of supported formats may vary from interface to interface (see the documentation of the specific interface). 

* /{get-context-information} 

  Returns a list of context information that can be be acquired or processed by the context detection through widgets and interpreters. For a detailed explanation of the structure of the list see the {{{./dtddoc/ContextInformation.dtd.html}Measurable Context Information DTD}}.
  
** Request Method

  HTTP GET  
  
** Supported Return Formats

  /xml\
  /json
  
** Parameters

  None
  
** Example Return (XML)

+-----
<contextInformation>
    <!-- Context information for the default rule generation assembly. -->
    <information id="CI_CURRENT_LEARNING_UNIT">
        <contextClasses>
            <contextClass id="CC_SCENARIO"/>
        </contextClasses>
        <contextValue type="STRING">
            <operators>
                <operator id="CONTAINS"/>
                <operator id="IS"/>
                <operator id="IS_NOT"/>
                <operator id="NO_VALUE"/>
            </operators>
        </contextValue>
    </information>
</contextInformation>
+-----

** Example Return (JSON)

+-----
{
    "contextInformation": {
        "information": [
            {
                "id": "CI_CURRENT_LEARNING_UNIT",
                "contextClasses": {
                    "contextClass": {
                        "id":"CC_SCENARIO"
                    }
                },
                "contextValue": {
                    "operators": {
                         "operator": [
                             {
                                 "id":"CONTAINS"
                             },
                             {
                                 "id":"IS"
                             },
                             {
                                 "id":"IS_NOT"
                             },
                             {
                                 "id":"NO_VALUE"
                             }
                         ]
                     },
                     "type":"STRING"
                 }
             }
         ]
     }
}
+-----
  
* /{get-adaptation-rules}

  This interfaces generates adaptation rules from an URL encoded ontology ABox.
  
** Request Method

  HTTP POST  
  
** Supported Return Formats

  /dsl
  
** Parameters

  * ontologyABox : The URL encoded ontology ABox.

** Example Return

+---------
define ContextInformation {
    id : '',
    value : 'NO_VALUE',
    parameters : { },
    constructor : function(id, value, parameters) {
        this.id = id;
        this.value = value;
        this.parameters = parameters;
    }
}

rule "505570d5-2dd6-435e-bf96-2cc3f73c8f55" { 
    when {
        c1 : ContextInformation (c1.id == 'CI_CURRENT_LEARNING_UNIT' && c1.value == '125');
    } then {
        emit("preloadLearningUnit", "124");
    }
}
+---------

* /{get-knowledge-ontology}

  Foo
  
** Request Method

  HTTP GET
  
** Supported Return Formats

  /owl
  
** Parameters

  None