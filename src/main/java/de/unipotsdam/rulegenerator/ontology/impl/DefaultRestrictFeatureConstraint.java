package de.unipotsdam.rulegenerator.ontology.impl;

import de.unipotsdam.rulegenerator.ontology.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultRestrictFeatureConstraint <br>
 * @version generated on Tue Sep 02 15:45:18 CEST 2014 by tobias
 */
public class DefaultRestrictFeatureConstraint extends WrappedIndividualImpl implements RestrictFeatureConstraint {

    public DefaultRestrictFeatureConstraint(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://localhost:9998/owl/get-knowledge-ontology#hasFeature
     */
     
    public Collection<? extends WrappedIndividual> getHasFeature() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASFEATURE,
                                               WrappedIndividualImpl.class);
    }

    public boolean hasHasFeature() {
	   return !getHasFeature().isEmpty();
    }

    public void addHasFeature(WrappedIndividual newHasFeature) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASFEATURE,
                                       newHasFeature);
    }

    public void removeHasFeature(WrappedIndividual oldHasFeature) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASFEATURE,
                                          oldHasFeature);
    }


}
