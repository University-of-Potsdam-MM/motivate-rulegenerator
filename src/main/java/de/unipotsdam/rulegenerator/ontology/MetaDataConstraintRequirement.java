package de.unipotsdam.rulegenerator.ontology;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;

import org.semanticweb.owlapi.model.OWLNamedIndividual;
import org.semanticweb.owlapi.model.OWLOntology;

/**
 * 
 * <p>
 * Generated by Protege (http://protege.stanford.edu). <br>
 * Source Class: MetaDataConstraintRequirement <br>
 * @version generated on Mon Aug 18 12:20:09 CEST 2014 by tobias
 */

public interface MetaDataConstraintRequirement extends ConstraintRequirement {

    /* ***************************************************
     * Property http://www.motivate-project.de/ontologies/knowledge#hasContextRequirementMeasurableContextInformation
     */
     
    /**
     * Gets all property values for the hasContextRequirementMeasurableContextInformation property.<p>
     * 
     * @returns a collection of values for the hasContextRequirementMeasurableContextInformation property.
     */
    Collection<? extends MeasurableContextInformation> getHasContextRequirementMeasurableContextInformation();

    /**
     * Checks if the class has a hasContextRequirementMeasurableContextInformation property value.<p>
     * 
     * @return true if there is a hasContextRequirementMeasurableContextInformation property value.
     */
    boolean hasHasContextRequirementMeasurableContextInformation();

    /**
     * Adds a hasContextRequirementMeasurableContextInformation property value.<p>
     * 
     * @param newHasContextRequirementMeasurableContextInformation the hasContextRequirementMeasurableContextInformation property value to be added
     */
    void addHasContextRequirementMeasurableContextInformation(MeasurableContextInformation newHasContextRequirementMeasurableContextInformation);

    /**
     * Removes a hasContextRequirementMeasurableContextInformation property value.<p>
     * 
     * @param oldHasContextRequirementMeasurableContextInformation the hasContextRequirementMeasurableContextInformation property value to be removed.
     */
    void removeHasContextRequirementMeasurableContextInformation(MeasurableContextInformation oldHasContextRequirementMeasurableContextInformation);


    /* ***************************************************
     * Property http://www.motivate-project.de/ontologies/knowledge#hasEndTime
     */
     
    /**
     * Gets all property values for the hasEndTime property.<p>
     * 
     * @returns a collection of values for the hasEndTime property.
     */
    Collection<? extends Object> getHasEndTime();

    /**
     * Checks if the class has a hasEndTime property value.<p>
     * 
     * @return true if there is a hasEndTime property value.
     */
    boolean hasHasEndTime();

    /**
     * Adds a hasEndTime property value.<p>
     * 
     * @param newHasEndTime the hasEndTime property value to be added
     */
    void addHasEndTime(Object newHasEndTime);

    /**
     * Removes a hasEndTime property value.<p>
     * 
     * @param oldHasEndTime the hasEndTime property value to be removed.
     */
    void removeHasEndTime(Object oldHasEndTime);



    /* ***************************************************
     * Property http://www.motivate-project.de/ontologies/knowledge#hasStartingTime
     */
     
    /**
     * Gets all property values for the hasStartingTime property.<p>
     * 
     * @returns a collection of values for the hasStartingTime property.
     */
    Collection<? extends Object> getHasStartingTime();

    /**
     * Checks if the class has a hasStartingTime property value.<p>
     * 
     * @return true if there is a hasStartingTime property value.
     */
    boolean hasHasStartingTime();

    /**
     * Adds a hasStartingTime property value.<p>
     * 
     * @param newHasStartingTime the hasStartingTime property value to be added
     */
    void addHasStartingTime(Object newHasStartingTime);

    /**
     * Removes a hasStartingTime property value.<p>
     * 
     * @param oldHasStartingTime the hasStartingTime property value to be removed.
     */
    void removeHasStartingTime(Object oldHasStartingTime);



    /* ***************************************************
     * Common interfaces
     */

    OWLNamedIndividual getOwlIndividual();

    OWLOntology getOwlOntology();

    void delete();

}
